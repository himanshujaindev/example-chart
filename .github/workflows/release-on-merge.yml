name: Create Release on Merge

on:
  pull_request:
    types: [closed]  # Trigger on PR close (merge or close)

permissions:
  contents: write  # Grant write permissions to push tags

jobs:
  release:
    if: github.event.pull_request.merged == true  # Only run when PR is merged
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Determine latest tag
      id: get_latest_tag
      run: |
        # Check if there are any existing tags
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "none")
        if [ "$latest_tag" = "none" ]; then
          echo "Initial release detected, setting tag to v1.0.0"
          echo "name=new_tag::v1.0.0" >> $GITHUB_OUTPUT
        else
          echo "Latest tag: $latest_tag"
          # Increment the version (minor or patch as required)
          new_version=$(echo $latest_tag | awk -F. '{$NF+=1; OFS="."; print $0}')
          echo "New version: $new_version"
          echo "name=new_tag::$new_version" >> $GITHUB_OUTPUT
        fi

    - name: Create tag and push it
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided automatically by GitHub Actions
      run: |
        # Get the new tag from previous step
        new_tag="${{ steps.get_latest_tag.outputs.new_tag }}"
        echo "Creating tag $new_tag"
        git tag $new_tag
        git push origin $new_tag

    - name: Create GitHub release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Provided automatically by GitHub Actions
      run: |
        new_tag="${{ steps.get_latest_tag.outputs.new_tag }}"
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d '{
            "tag_name": "'$new_tag'",
            "name": "'$new_tag'",
            "body": "New release ${{ new_tag }} generated on merge of PR #${{ github.event.pull_request.number }}",
            "draft": false,
            "prerelease": false
          }'
